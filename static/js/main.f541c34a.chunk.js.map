{"version":3,"sources":["services/hnApi.js","styles/StoryStyles.js","components/Story.js","hooks/useInfiniteScroll.js","styles/LoadingStyles.js","containers/NewStories.js","styles/GlobalStyles.js","styles/TopbarStyles.js","components/Toggle.js","components/Topbar.js","components/JobStory.js","containers/JobStories.js","containers/TopStories.js","components/ScrollArrow.js","containers/ShowStories.js","styles/theme.js","styles/BurgerStyles.js","components/Burger.js","styles/MenuSyles.js","components/Menu.js","components/BurgerMenu.js","styles/SearchStyles.js","containers/SearchResults.js","mappers/formatDate.js","App.js","hooks/useTheme.js","serviceWorker.js","index.js"],"names":["baseUrl","newStoriesUrl","topStoriesUrl","jobStoriesUrl","showStoriesUrl","storyUrl","getNewStoryIds","a","axios","get","data","console","log","getJobStoryIds","getTopStoryIds","getShowStoryIds","getStory","storyId","id","title","by","url","time","descendants","score","getSearchPosts","query","hits","StoryContainer","styled","div","theme","text","StoriesContainer","story","Points","JavascriptTimeAgo","addLocale","en","Story","useState","setStory","useEffect","then","rel","target","href","ReactTimeAgo","date","useInfiniteScroll","start","pace","limit","setLimit","window","onscroll","innerHeight","document","documentElement","scrollTop","offsetHeight","Spinner","NewStories","storyIds","setStoryIds","infiniteScroll","length","slice","map","key","GlobalStyles","createGlobalStyle","body","TopbarContainer","NavItemContainer","NavItem","NavLink","attrs","activeClassName","props","mode","Toggle","toggleTheme","style","cursor","width","height","onClick","Topbar","exact","to","JobStory","JobStories","abortController","AbortController","signal","abort","TopStories","ScrollArrow","showScroll","setShowScroll","addEventListener","pageYOffset","className","scrollTo","top","behavior","display","ShowStories","lightTheme","darkTheme","StyledBurger","button","open","Burger","setOpen","StyledMenu","nav","Menu","BurgerMenu","ref","handler","node","useRef","listener","event","current","contains","removeEventListener","SearchField","SearchResults","setQuery","searchField","setSearchField","onChange","e","value","type","q","created_at_i","points","author","timestamp","created_at","Date","toLocaleDateString","year","month","day","num_comments","App","setTheme","localTheme","localStorage","getItem","setItem","useTheme","path","component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f541c34a.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const baseUrl = 'https://hacker-news.firebaseio.com/v0/'\n\nexport const newStoriesUrl = `${baseUrl}newstories.json`\nexport const topStoriesUrl = `${baseUrl}topstories.json`\nexport const jobStoriesUrl = `${baseUrl}jobstories.json`\nexport const showStoriesUrl = `${baseUrl}showstories.json`\nexport const storyUrl = `${baseUrl}item/`\n\nexport const getNewStoryIds = async () => {\n    try {\n        const { data } = await axios.get(newStoriesUrl)\n        return data\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const getJobStoryIds = async () => {\n    try {\n        const { data } = await axios.get(jobStoriesUrl)\n        return data\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const getTopStoryIds = async () => {\n    try {\n        const { data } = await axios.get(topStoriesUrl)\n        return data\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const getShowStoryIds = async () => {\n    try {\n        const { data } = await axios.get(showStoriesUrl)\n        return data\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const getStory = async storyId => {\n    try {\n        const { data: { id, title, by, url, time, descendants, score } } = await axios.get(`${storyUrl + storyId}.json`)\n        return { id, title, by, url, time, descendants, score }\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const getSearchPosts = async query => {\n    try {\n      const {data: {hits}} = await axios.get(\n        `https://hn.algolia.com/api/v1/search?query=${query}`)\n        return hits\n    } catch (error) {\n        console.log(error) \n    }\n  }\n","import styled from \"styled-components\";\n\nexport const StoryContainer = styled.div`\nmargin-left: 3rem;\nh3 {\n    cursor: pointer;\n    a {\n       color: ${({ theme }) => theme.text};\n       text-decoration: none;\n    }\n}\n`\n\nexport const StoriesContainer = styled.div`\ndisplay: flex;\nbackground-color: ${({ theme }) => theme.story};\nwidth: 80%;\nmargin: 1rem auto;\npadding: 1.5rem;\nalign-items: center;\n`\n\nexport const Points = styled.div`\nfont-size: 1.5rem;\n`\n","import React, { useEffect, useState } from 'react';\nimport { getStory } from '../services/hnApi';\nimport { StoryContainer, StoriesContainer, Points } from '../styles/StoryStyles';\nimport JavascriptTimeAgo from 'javascript-time-ago'\nimport en from 'javascript-time-ago/locale/en'\nimport ReactTimeAgo from 'react-time-ago'\n\nJavascriptTimeAgo.addLocale(en)\n\nconst Story = ({ storyId }) => {\n    const [story, setStory] = useState({})\n    useEffect(() => {\n        getStory(storyId).then(data => data && data.url && setStory(data))\n    }, [storyId])\n\n    return story && story.url ? (\n        <StoriesContainer>\n            <Points>{story.score ? story.score : 0}</Points>\n                <StoryContainer>\n\n                    <h3><a rel=\"noopener noreferrer\" target=\"_blank\" href={story.url}>{story.title}</a></h3>\n\n                    <span>by: {story.by} </span>\n\n                    <span><ReactTimeAgo date={story.time * 1000} /></span>\n\n                    <span> | {story.descendants === 1 ? `${story.descendants} comment` : `${story.descendants} comments`}</span>\n                </StoryContainer>\n        </StoriesContainer>\n    ) : null\n}\nexport default Story","import { useState } from \"react\";\n\nexport const useInfiniteScroll = (start = 30, pace = 10) => {\n  const [limit, setLimit] = useState(start)\n  window.onscroll = () => {\n    if (\n      window.innerHeight + document.documentElement.scrollTop ===\n      document.documentElement.offsetHeight\n    ) {\n      setLimit(limit + pace)\n    }\n  }\n  return limit;\n} ","import styled from 'styled-components'\n\nexport const Spinner = styled.div`\n\n@keyframes loading {\n\tto { \n        transform: rotate(360deg); \n        }\n}\nposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\tmargin: -20px 0 0 -20px;\n\twidth: 40px;\n\theight: 40px;\n\tborder-radius: 50%;\n\tbackground: transparent;\n\tborder-top: 4px solid #fff;\n\tborder-right: 4px solid #fff;\n\tborder-bottom: 4px solid #121212;\n\tborder-left: 4px solid #121212;\n\tanimation: loading 1.2s infinite linear;\n\n  `","import React, { useState, useEffect } from 'react';\nimport { getNewStoryIds } from '../services/hnApi';\nimport Story from '../components/Story';\nimport {useInfiniteScroll} from '../hooks/useInfiniteScroll';\nimport { Spinner } from '../styles/LoadingStyles';\n\nconst NewStories = () => {\n    const [storyIds, setStoryIds] = useState([])\n    let infiniteScroll = useInfiniteScroll()\n\n    useEffect(() => {\n        getNewStoryIds().then(data => setStoryIds(data))\n    }, [])\n\n    return storyIds.length ? storyIds.slice(0, infiniteScroll).map(storyId => <Story key={storyId} storyId={storyId} /> ) : <Spinner />\n}\n\nexport default NewStories","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyles = createGlobalStyle`\n*,\n*::after,\n*::before {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nhtml {\n  font-size: 62.5%;\n} \n\nbody {\n  font-family: 'Roboto', sans-serif;\n  color: ${({ theme }) => theme.text};\n  background-color: ${({ theme }) => theme.body};\n\n  .scrollTop {\n  position: fixed;\n  width: 4rem;\n  bottom: 20px;\n  right: 3vw;\n  height: 20px;\n  z-index: 1000;\n  cursor: pointer;\n  animation: fadeIn 0.3s;\n  transition: opacity 0.4s;\n  opacity: 0.5;\n}\n\n.scrollTop:hover {\n  opacity: 1;\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 0.5;\n  }\n}\n\n.loading {\nmargin: auto;\nfont-size: 6rem;\n}\n\n}\n`\n\nexport default GlobalStyles","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nconst activeClassName = 'nav-item-active'\n\nexport const TopbarContainer = styled.div`\nwidth: 100%;\nheight: 8vh;\nbackground-color: #F0652F;\ndisplay: flex;\nh1 {\n    font-size: 2.5rem;\n    margin: auto;\n    color: #ffff;\n\n}\nspan {\n    display: inline-block;\n    vertical-align: center;\n    display: flex;\n    height: 100%;\n    justify-content: flex-start;\n    width: max-content;\n    margin-left: 2rem;\n}\n`\n\nexport const NavItemContainer = styled.div`\n    width: 80%;\n    background-color: #F0652F;\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    font-size: 1.3rem;\n    @media (max-width: 600px) {\n    display: none;\n  }\n`\n\nexport const NavItem = styled(NavLink).attrs({ activeClassName })`\ntext-decoration: none;\ncolor: ${props => props.theme.mode = 'dark' ? '#fff' : '#1F1F1F'};\n&.${activeClassName} {\n  outline: 0;\n  text-decoration: none;\n  color: ${props => props.theme.mode = 'dark' ? '#1F1F1F' : '#fff'};\n}\n`","import React from \"react\";\nimport { FiSun, FiMoon } from 'react-icons/fi';\n\nconst Toggle = ({ theme, toggleTheme }) => {\nreturn theme === 'light' ? <FiSun style={{cursor: 'pointer', width: '2rem',\n    height: '2rem'}} onClick={toggleTheme}/> : <FiMoon style={{cursor: 'pointer', width: '2rem',\n    height: '2rem'}} onClick={toggleTheme}/>\n}\n\nexport default Toggle;","import React from 'react';\nimport { TopbarContainer, NavItemContainer, NavItem } from '../styles/TopbarStyles';\nimport Toggle from './Toggle';\n\n\nexport const Topbar = ({ theme, toggleTheme }) => {\n\n  return (\n    <TopbarContainer>\n      <span><h1>HACKER NEWS</h1></span>\n      <NavItemContainer>\n        <NavItem exact to='/'>NEWEST</NavItem>\n        <NavItem to='/top'>TRENDING</NavItem>\n        <NavItem to='/show'>SHOW</NavItem>\n        <NavItem to='/jobs'>JOBS</NavItem>\n        <NavItem to='/search'>SEARCH</NavItem>\n        <Toggle theme={theme} toggleTheme={toggleTheme} />\n      </NavItemContainer>\n    </TopbarContainer>\n  )\n}\n\n","import React, { useEffect, useState } from 'react';\nimport { getStory } from '../services/hnApi';\nimport { StoryContainer, StoriesContainer } from '../styles/StoryStyles';\nimport JavascriptTimeAgo from 'javascript-time-ago'\nimport en from 'javascript-time-ago/locale/en'\nimport ReactTimeAgo from 'react-time-ago'\n\nJavascriptTimeAgo.addLocale(en)\n\nconst JobStory = ({ storyId }) => {\n    const [story, setStory] = useState({})\n    useEffect(() => {\n        getStory(storyId).then(data => data && data.url && setStory(data))\n    }, [storyId])\n\n    return story && story.url ? (\n        <StoriesContainer>\n                <StoryContainer>\n                    <h3><a rel=\"noopener noreferrer\" target=\"_blank\" href={story.url}>{story.title}</a></h3>\n\n                    <span><ReactTimeAgo date={story.time * 1000} /></span>\n\n                </StoryContainer>\n        </StoriesContainer>\n    ) : null\n}\nexport default JobStory","import React, { useState, useEffect } from 'react';\nimport { getJobStoryIds } from '../services/hnApi';\nimport JobStory from '../components/JobStory';\nimport {useInfiniteScroll} from '../hooks/useInfiniteScroll';\nimport { Spinner } from '../styles/LoadingStyles';\n\nconst JobStories = () => {\n    const [storyIds, setStoryIds] = useState([])\n    let infiniteScroll = useInfiniteScroll()\n\n    useEffect(() => {\n        const abortController = new AbortController()\n        const signal = abortController.signal\n        getJobStoryIds({ signal: signal }).then(data => setStoryIds(data))\n        return function cleanup() {\n            abortController.abort()\n          }\n    }, [])\n\n    return storyIds.length ? storyIds.slice(0, infiniteScroll).map(storyId => <JobStory key={storyId} storyId={storyId} /> ) : <Spinner />\n}\n\nexport default JobStories","import React, { useState, useEffect } from 'react';\nimport { getTopStoryIds } from '../services/hnApi';\nimport Story from '../components/Story';\nimport {useInfiniteScroll} from '../hooks/useInfiniteScroll';\nimport { Spinner } from '../styles/LoadingStyles';\n\nconst TopStories = () => {\n    const [storyIds, setStoryIds] = useState([])\n    let infiniteScroll = useInfiniteScroll()\n\n    useEffect(() => {\n        getTopStoryIds().then(data => setStoryIds(data))\n    }, [])\n\n    return storyIds.length ? storyIds.slice(0, infiniteScroll).map(storyId => <Story key={storyId} storyId={storyId} /> ) : <Spinner />\n}\n\nexport default TopStories","import React, { useState } from \"react\";\nimport { FaArrowCircleUp } from \"react-icons/fa\";\n\nconst ScrollArrow = () => {\n  const [showScroll, setShowScroll] = useState(false);\n\n  const checkScrollTop = () => {\n    if (!showScroll && window.pageYOffset > 400) {\n      setShowScroll(true);\n    } else if (showScroll && window.pageYOffset <= 400) {\n      setShowScroll(false);\n    }\n  }\n\n  const scrollTop = () => {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n  }\n\n  window.addEventListener(\"scroll\", checkScrollTop);\n\n  return (\n\n    <FaArrowCircleUp\n      className=\"scrollTop\"\n      onClick={scrollTop}\n      style={{height: 40, display: showScroll ? \"flex\" : \"none\" }}\n    />\n\n  )\n}\n\nexport default ScrollArrow;\n","import React, { useState, useEffect } from 'react';\nimport { getShowStoryIds } from '../services/hnApi';\nimport Story from '../components/Story';\nimport {useInfiniteScroll} from '../hooks/useInfiniteScroll';\nimport { Spinner } from '../styles/LoadingStyles';\n\nconst ShowStories = () => {\n    const [storyIds, setStoryIds] = useState([])\n    let infiniteScroll = useInfiniteScroll()\n\n    useEffect(() => {\n        getShowStoryIds().then(data => setStoryIds(data))\n    }, [])\n\n    return storyIds.length ? storyIds.slice(0, infiniteScroll).map(storyId => <Story key={storyId} storyId={storyId} /> ) : <Spinner />\n}\n\nexport default ShowStories","export const lightTheme = {\n    body: '#eeeeee',\n    text: '#121212',\n    story: '#fff',\n  }\n\n  export const darkTheme = {\n    body: '#121212',\n    text: '#fff',\n    story: '#1F1F1F',\n  }","import styled from 'styled-components';\n\nexport const StyledBurger = styled.button`\n  position: absolute;\n  top: 2%;\n  right: 2rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 2rem;\n  height: 2rem;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 10;\n\n  @media (min-width: 768px) {\n    visibility: hidden;\n  }\n\n  &:focus {\n    outline: none;\n  }\n \n  div {\n    width: 2rem;\n    height: 0.25rem;\n    background: #fff;\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => (open ? \"0\" : \"1\")};\n      transform: ${({ open }) => (open ? \"translateX(20px)\" : \"translateX(0)\")};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\n    }\n  }\n`","import React from 'react';\nimport { StyledBurger } from '../styles/BurgerStyles';\n\nconst Burger = ({ open, setOpen }) => {\n  return (\n    <StyledBurger open={open} onClick={() => setOpen(!open)}>\n      <div />\n      <div />\n      <div />\n    </StyledBurger>\n  )\n}\n\nexport default Burger;","import styled from 'styled-components';\n\nexport const StyledMenu = styled.nav`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  z-index: 1;\n  background: #F0652F;\n  transform: ${({ open }) => (open ? \"translateX(0)\" : \"translateX(-100%)\")};\n  height: 100vh;\n  text-align: left;\n  padding: 2rem;\n  position: absolute;\n  top: 0;\n  left: 0;\n  transition: transform 0.3s ease-in-out;\n  \n  @media (max-width: 600px) {\n    width: 100%;\n  }\n\n  a {\n    font-size: 2rem;\n    text-transform: uppercase;\n    padding: 2rem 0;\n    font-weight: bold;\n    letter-spacing: 0.5rem;\n    color: #fff;\n    text-decoration: none;\n    transition: color 0.3s linear;\n    \n    @media (max-width: 600px) {\n      font-size: 1.5rem;\n      text-align: center;\n    }\n\n    &:hover {\n      color: #f2f2f2;\n    }\n  }\n`;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { StyledMenu } from '../styles/MenuSyles';\n\nconst Menu = ({open, setOpen}) => {\n  return (\n    <StyledMenu open={open}>\n      <Link onClick={() => setOpen(!open)} to=\"/\">      \n        NEWEST \n      </Link>\n      <Link onClick={() => setOpen(!open)} to=\"/top\">\n        TRENDING\n        </Link>\n        <Link onClick={() => setOpen(!open)} to=\"/show\">\n        SHOW\n        </Link>\n      <Link onClick={() => setOpen(!open)} to=\"/jobs\">\n        JOBS\n        </Link>\n        <Link onClick={() => setOpen(!open)} to=\"/search\">\n        SEARCH\n        </Link>\n    </StyledMenu>\n  )\n}\n\nexport default Menu;","import React, {useState, useEffect, useRef} from 'react';\nimport Burger from './Burger';\nimport Menu from './Menu';\n\nconst useOnClickOutside = (ref, handler) => {\n    useEffect(() => {\n      const listener = event => {\n        if (!ref.current || ref.current.contains(event.target)) return;\n        handler(event);\n      };\n      document.addEventListener(\"mousedown\", listener)\n  \n      return () => {\n        document.removeEventListener(\"mousedown\", listener)\n      };\n    }, [ref, handler])\n  }\n  \n  const BurgerMenu = () => {\n    const [open, setOpen] = useState(false)\n    const node = useRef();\n    useOnClickOutside(node, () => setOpen(false))\n    return (\n      <div>\n\n        <div ref={node}>\n          <Burger open={open} setOpen={setOpen} />\n          <Menu open={open} setOpen={setOpen} />\n        </div>\n      </div>\n    );\n  };\n\nexport default BurgerMenu","import styled from \"styled-components\";\n\nexport const SearchField = styled.div`\nmargin: 3rem 30vw 3rem 3rem;\nh2 {\n    margin-bottom: 1rem;\n    font-size: 3rem;\n}\n\ninput {\n    position: relative;\n    border: none;\n    width: 100%;\n    height: 3.3rem;\n    border-radius: 3px;\n    background-color: ${({ theme }) => theme.story};\n    color: ${({ theme }) => theme.text};\n    font-size: 1.6rem;\n    padding-left: 1rem;\n    &:focus {\n        border: 2px solid #F0652F;\n        outline: none;\n    }\n}\n`","import React, { useState, useEffect } from 'react'\nimport { getSearchPosts } from '../services/hnApi'\nimport { StoriesContainer, StoryContainer,Points } from '../styles/StoryStyles'\nimport { SearchField } from '../styles/SearchStyles'\nimport { formatDate } from '../mappers/formatDate'\n\n\nexport default function SearchResults() {\n    const [query, setQuery] = useState([])\n    const [searchField, setSearchField] = useState('')\n\n    useEffect(() => {\n        getSearchPosts(searchField).then(data => setQuery(data))\n    }, [searchField])\n\n    return (\n        <>\n        <SearchField>\n            <h2>Search</h2>\n                <input onChange={e => setSearchField(e.target.value)} value={searchField} type=\"search\"/>\n            </SearchField>\n            {searchField ? query.map(q => q.url ?\n                <StoriesContainer key={q.created_at_i}>\n                    <Points>{q.points}</Points>\n                    <StoryContainer>\n                    <h3>\n                        <a rel=\"noopener noreferrer\" target=\"_blank\" href={q.url}>{q.title}</a>\n                    </h3>\n                    <span>by: {q.author} </span>\n                    <span>{formatDate(q.created_at)}</span>\n                    <span> | {q.num_comments === 1 ? `${q.num_comments} comment` : `${q.num_comments} comments`}</span>\n                    </StoryContainer>\n                </StoriesContainer>\n                : null) : null}\n        </>\n    )\n}\n","export const formatDate = timestamp => {\n\n    return new Date(timestamp).toLocaleDateString(\"en-US\", {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n })\n}\n","import React from 'react';\nimport NewStories from './containers/NewStories';\nimport GlobalStyles from './styles/GlobalStyles';\nimport { Topbar } from './components/Topbar';\nimport {\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport JobStories from './containers/JobStories';\nimport TopStories from './containers/TopStories';\nimport ScrollArrow from './components/ScrollArrow';\nimport ShowStories from './containers/ShowStories';\nimport { ThemeProvider } from 'styled-components';\nimport { useTheme } from './hooks/useTheme';\nimport { lightTheme, darkTheme } from './styles/theme'\nimport BurgerMenu from './components/BurgerMenu';\nimport SearchResults from './containers/SearchResults';\n\nconst App = () => {\n  const [ theme, toggleTheme ] = useTheme()\n  return (\n    <>\n      <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n        <GlobalStyles />\n        <Topbar theme={theme} toggleTheme={toggleTheme} />\n        <BurgerMenu/>\n        <Switch>\n          <Route exact path='/' component={NewStories} />\n          <Route path='/jobs' component={JobStories} />\n          <Route path='/top' component={TopStories} />\n          <Route path='/show' component={ShowStories} />\n          <Route exact path='/search' component={SearchResults} />\n        </Switch>\n        <ScrollArrow />\n      </ThemeProvider>\n    </>\n  )\n}\n\nexport default App","import { useEffect, useState } from \"react\";\n\nexport const useTheme = () => {\n  const [theme, setTheme] = useState(\"dark\")\n  const toggleTheme = () => {\n    if (theme === \"light\") {\n      window.localStorage.setItem(\"theme\", \"dark\")\n      setTheme(\"dark\")\n    } else {\n      window.localStorage.setItem(\"theme\", \"light\")\n      setTheme(\"light\")\n    }\n  }\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem(\"theme\")\n    localTheme && setTheme(localTheme)\n  }, [])\n\n  return [theme, toggleTheme]\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {\n  HashRouter\n } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n)\nserviceWorker.unregister();\n"],"sourceRoot":""}